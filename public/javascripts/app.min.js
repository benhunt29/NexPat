var app=angular.module("NextPat",["ngRoute"]);app.config(["$routeProvider","$locationProvider",function(e,o){o.html5Mode(!0),e.when("/",{templateUrl:"/views/home.html",controller:"mainController"}).when("/about",{templateUrl:"/views/about.html",controller:"aboutController"}).when("/contact",{templateUrl:"/views/contact.html",controller:"contactController"}).when("/login",{templateUrl:"/views/login.html",controller:"loginController"}).when("/signUp",{templateUrl:"/views/signUp.html",controller:"loginController"}).when("/questionnaire",{templateUrl:"/views/questionnaire.html",controller:"questionnaireController"}).when("/help",{templateUrl:"/views/help.html",controller:"helpController"})}]),app.controller("mainController",["$scope","$location",function(e,o){var t=[{question:"Have you been here before?",route:"login"},{question:"Would you like to sign up?",route:"signUp"},{question:"Okay, your information will not be saved."}];e.question=t[0].question;var n=0;e.showButtons=!0,e.getQuestion=function(l){console.log(n);var r=(t[n].question,t[n].route);l?o.path(r):(n++,e.question=t[n].question,n==t.length-1&&(e.showButtons=!1))}}]),app.controller("aboutController",["$scope",function(e){e.message="I'm a page that describes this application!"}]),app.controller("contactController",["$scope",function(e){e.message="I'm a page that tells you how to yell (by writing an all-caps email) at the developer!"}]),app.controller("signUpController",["$scope",function(e){}]),app.controller("loginController",["$scope",function(e){}]),app.controller("helpController",["$scope",function(e){e.message="I'm a help page that currently doesn't help at all"}]),app.controller("questionnaireController",["$scope","$location",function(e,o){var t=[{question:"Are you interested in living abroad?",type:"boolean"},{question:"Do you speak any languages besides English?",type:"boolean"},{question:"What field do you work in?",type:"list",answerOptions:["Technology","Engineering","Finance","Law","Business"]}],n=1;e.type=t[0].type,e.question=t[0].question,e.getQuestion=function(o){n==t.length?(e.question="Your list is being generated!",e.type=""):(e.question=t[n].question,e.type=t[n].type,"list"==e.type&&(e.list=t[n].answerOptions),t[n-1].answer=o,n++)}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCIkbG9jYXRpb25Qcm92aWRlciIsImh0bWw1TW9kZSIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkbG9jYXRpb24iLCJpbnRyb1F1ZXN0aW9ucyIsInF1ZXN0aW9uIiwicm91dGUiLCJxdWVzdGlvbk51bSIsInNob3dCdXR0b25zIiwiZ2V0UXVlc3Rpb24iLCJhbnN3ZXIiLCJjb25zb2xlIiwibG9nIiwicGF0aCIsImxlbmd0aCIsIm1lc3NhZ2UiLCJxdWVzdGlvbnMiLCJ0eXBlIiwiYW5zd2VyT3B0aW9ucyIsImxpc3QiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUFBLEtBQUFDLFFBQUFDLE9BQUEsV0FBQSxXQUVBRixLQUFBRyxRQUFBLGlCQUFBLG9CQUFBLFNBQUFDLEVBQUFDLEdBRUFBLEVBQUFDLFdBQUEsR0FFQUYsRUFBQUcsS0FBQSxLQUVBQyxZQUFBLG1CQUNBQyxXQUFBLG1CQUNBRixLQUFBLFVBRUFDLFlBQUEsb0JBQ0FDLFdBQUEsb0JBQ0FGLEtBQUEsWUFFQUMsWUFBQSxzQkFDQUMsV0FBQSxzQkFDQUYsS0FBQSxVQUVBQyxZQUFBLG9CQUNBQyxXQUFBLG9CQUNBRixLQUFBLFdBRUFDLFlBQUEscUJBQ0FDLFdBQUEsb0JBQ0FGLEtBQUEsa0JBRUFDLFlBQUEsNEJBQ0FDLFdBQUEsNEJBQ0FGLEtBQUEsU0FFQUMsWUFBQSxtQkFDQUMsV0FBQSxzQkFJQVQsSUFBQVMsV0FBQSxrQkFBQSxTQUFBLFlBQUEsU0FBQUMsRUFBQUMsR0FFQSxHQUFBQyxLQUFBQyxTQUFBLDZCQUFBQyxNQUFBLFVBQ0FELFNBQUEsNkJBQUFDLE1BQUEsV0FDQUQsU0FBQSw2Q0FDQUgsR0FBQUcsU0FBQUQsRUFBQSxHQUFBQyxRQUNBLElBQUFFLEdBQUEsQ0FDQUwsR0FBQU0sYUFBQSxFQUNBTixFQUFBTyxZQUFBLFNBQUFDLEdBQ0FDLFFBQUFDLElBQUFMLEVBQ0EsSUFDQUQsSUFEQUYsRUFBQUcsR0FBQUYsU0FDQUQsRUFBQUcsR0FBQUQsTUFDQUksR0FDQVAsRUFBQVUsS0FBQVAsSUFFQUMsSUFDQUwsRUFBQUcsU0FBQUQsRUFBQUcsR0FBQUYsU0FDQUUsR0FBQUgsRUFBQVUsT0FBQSxJQUNBWixFQUFBTSxhQUFBLFFBTUFoQixJQUFBUyxXQUFBLG1CQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQWEsUUFBQSxpREFHQXZCLElBQUFTLFdBQUEscUJBQUEsU0FBQSxTQUFBQyxHQUNBQSxFQUFBYSxRQUFBLDRGQUdBdkIsSUFBQVMsV0FBQSxvQkFBQSxTQUFBLFNBQUFDLE9BSUFWLElBQUFTLFdBQUEsbUJBQUEsU0FBQSxTQUFBQyxPQUlBVixJQUFBUyxXQUFBLGtCQUFBLFNBQUEsU0FBQUMsR0FDQUEsRUFBQWEsUUFBQSx3REFHQXZCLElBQUFTLFdBQUEsMkJBQUEsU0FBQSxZQUFBLFNBQUFDLEVBQUFDLEdBRUEsR0FBQWEsS0FBQVgsU0FBQSx1Q0FBQVksS0FBQSxZQUNBWixTQUFBLDhDQUFBWSxLQUFBLFlBQ0FaLFNBQUEsNkJBQUFZLEtBQUEsT0FBQUMsZUFBQSxhQUFBLGNBQUEsVUFBQSxNQUFBLGNBQ0FYLEVBQUEsQ0FDQUwsR0FBQWUsS0FBQUQsRUFBQSxHQUFBQyxLQUNBZixFQUFBRyxTQUFBVyxFQUFBLEdBQUFYLFNBQ0FILEVBQUFPLFlBQUEsU0FBQUMsR0FFQUgsR0FBQVMsRUFBQUYsUUFDQVosRUFBQUcsU0FBQSxnQ0FDQUgsRUFBQWUsS0FBQSxLQUVBZixFQUFBRyxTQUFBVyxFQUFBVCxHQUFBRixTQUNBSCxFQUFBZSxLQUFBRCxFQUFBVCxHQUFBVSxLQUVBLFFBQUFmLEVBQUFlLE9BQ0FmLEVBQUFpQixLQUFBSCxFQUFBVCxHQUFBVyxlQUVBRixFQUFBVCxFQUFBLEdBQUFHLE9BQUFBLEVBRUFIIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ05leHRQYXQnLCBbJ25nUm91dGUnXSk7XG5cbmFwcC5jb25maWcoWyckcm91dGVQcm92aWRlcicsJyRsb2NhdGlvblByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKXtcblxuICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcblxuICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy8nLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9ob21lLmh0bWwnLFxuICAgICAgICAgICAgY29udHJvbGxlcjogJ21haW5Db250cm9sbGVyJ1xuICAgICAgICB9KS53aGVuKCcvYWJvdXQnLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9hYm91dC5odG1sJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdhYm91dENvbnRyb2xsZXInXG4gICAgICAgIH0pLndoZW4oJy9jb250YWN0JyxcbiAgICAgICAge1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvY29udGFjdC5odG1sJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdjb250YWN0Q29udHJvbGxlcidcbiAgICAgICAgfSkud2hlbignL2xvZ2luJyxcbiAgICAgICAge1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3MvbG9naW4uaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnbG9naW5Db250cm9sbGVyJ1xuICAgICAgICB9KS53aGVuKCcvc2lnblVwJyxcbiAgICAgICAge1xuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdmlld3Mvc2lnblVwLmh0bWwnLFxuICAgICAgICAgICAgY29udHJvbGxlcjogJ2xvZ2luQ29udHJvbGxlcidcbiAgICAgICAgfSkud2hlbignL3F1ZXN0aW9ubmFpcmUnLFxuICAgICAgICB7XG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy92aWV3cy9xdWVzdGlvbm5haXJlLmh0bWwnLFxuICAgICAgICAgICAgY29udHJvbGxlcjogJ3F1ZXN0aW9ubmFpcmVDb250cm9sbGVyJ1xuICAgICAgICB9KS53aGVuKCcvaGVscCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnL3ZpZXdzL2hlbHAuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiAnaGVscENvbnRyb2xsZXInXG4gICAgICAgIH0pO1xufV0pO1xuXG5hcHAuY29udHJvbGxlcignbWFpbkNvbnRyb2xsZXInLCBbJyRzY29wZScsJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwkbG9jYXRpb24pe1xuXG4gICAgdmFyIGludHJvUXVlc3Rpb25zID0gW3txdWVzdGlvbjogXCJIYXZlIHlvdSBiZWVuIGhlcmUgYmVmb3JlP1wiLCByb3V0ZTonbG9naW4nfSxcbiAgICAgICAge3F1ZXN0aW9uOiBcIldvdWxkIHlvdSBsaWtlIHRvIHNpZ24gdXA/XCIsIHJvdXRlOiAnc2lnblVwJ30sXG4gICAgICAgIHtxdWVzdGlvbjogXCJPa2F5LCB5b3VyIGluZm9ybWF0aW9uIHdpbGwgbm90IGJlIHNhdmVkLlwifV07XG4gICAgJHNjb3BlLnF1ZXN0aW9uID0gaW50cm9RdWVzdGlvbnNbMF0ucXVlc3Rpb247XG4gICAgdmFyIHF1ZXN0aW9uTnVtID0gMDtcbiAgICAkc2NvcGUuc2hvd0J1dHRvbnMgPSB0cnVlO1xuICAgICRzY29wZS5nZXRRdWVzdGlvbiA9IGZ1bmN0aW9uKGFuc3dlcikge1xuICAgICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbk51bSk7XG4gICAgICAgIHZhciBxdWVzdGlvblRleHQgPSBpbnRyb1F1ZXN0aW9uc1txdWVzdGlvbk51bV0ucXVlc3Rpb247XG4gICAgICAgIHZhciByb3V0ZSA9IGludHJvUXVlc3Rpb25zW3F1ZXN0aW9uTnVtXS5yb3V0ZTtcbiAgICAgICAgaWYgKGFuc3dlcikge1xuICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgocm91dGUpO1xuICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICBxdWVzdGlvbk51bSsrO1xuICAgICAgICAgICAgJHNjb3BlLnF1ZXN0aW9uID0gaW50cm9RdWVzdGlvbnNbcXVlc3Rpb25OdW1dLnF1ZXN0aW9uO1xuICAgICAgICAgICAgaWYocXVlc3Rpb25OdW0gPT0gaW50cm9RdWVzdGlvbnMubGVuZ3RoLTEpe1xuICAgICAgICAgICAgICAgICRzY29wZS5zaG93QnV0dG9ucyA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbn1dKTtcblxuYXBwLmNvbnRyb2xsZXIoJ2Fib3V0Q29udHJvbGxlcicsIFsnJHNjb3BlJyxmdW5jdGlvbigkc2NvcGUpe1xuICAgICRzY29wZS5tZXNzYWdlID0gXCJJJ20gYSBwYWdlIHRoYXQgZGVzY3JpYmVzIHRoaXMgYXBwbGljYXRpb24hXCI7XG59XSk7XG5cbmFwcC5jb250cm9sbGVyKCdjb250YWN0Q29udHJvbGxlcicsWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpe1xuICAgICRzY29wZS5tZXNzYWdlID0gXCJJJ20gYSBwYWdlIHRoYXQgdGVsbHMgeW91IGhvdyB0byB5ZWxsIChieSB3cml0aW5nIGFuIGFsbC1jYXBzIGVtYWlsKSBhdCB0aGUgZGV2ZWxvcGVyIVwiO1xufV0pO1xuXG5hcHAuY29udHJvbGxlcignc2lnblVwQ29udHJvbGxlcicsWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpe1xuXG59XSk7XG5cbmFwcC5jb250cm9sbGVyKCdsb2dpbkNvbnRyb2xsZXInLFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKXtcblxufV0pO1xuXG5hcHAuY29udHJvbGxlcignaGVscENvbnRyb2xsZXInLFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKXtcbiAgICAkc2NvcGUubWVzc2FnZSA9IFwiSSdtIGEgaGVscCBwYWdlIHRoYXQgY3VycmVudGx5IGRvZXNuJ3QgaGVscCBhdCBhbGxcIjtcbn1dKTtcblxuYXBwLmNvbnRyb2xsZXIoJ3F1ZXN0aW9ubmFpcmVDb250cm9sbGVyJyxbJyRzY29wZScsJyRsb2NhdGlvbicsIGZ1bmN0aW9uKCRzY29wZSwkbG9jYXRpb24pe1xuXG4gICAgdmFyIHF1ZXN0aW9ucyA9IFt7cXVlc3Rpb246IFwiQXJlIHlvdSBpbnRlcmVzdGVkIGluIGxpdmluZyBhYnJvYWQ/XCIsdHlwZTonYm9vbGVhbid9LFxuICAgICAgICB7cXVlc3Rpb246XCJEbyB5b3Ugc3BlYWsgYW55IGxhbmd1YWdlcyBiZXNpZGVzIEVuZ2xpc2g/XCIsdHlwZTonYm9vbGVhbid9LFxuICAgIHtxdWVzdGlvbjpcIldoYXQgZmllbGQgZG8geW91IHdvcmsgaW4/XCIsdHlwZTonbGlzdCcsYW5zd2VyT3B0aW9uczpbJ1RlY2hub2xvZ3knLCdFbmdpbmVlcmluZycsJ0ZpbmFuY2UnLCdMYXcnLCdCdXNpbmVzcyddfV07XG4gICAgdmFyIHF1ZXN0aW9uTnVtID0gMTtcbiAgICAkc2NvcGUudHlwZSA9IHF1ZXN0aW9uc1swXS50eXBlO1xuICAgICRzY29wZS5xdWVzdGlvbiA9IHF1ZXN0aW9uc1swXS5xdWVzdGlvbjtcbiAgICAkc2NvcGUuZ2V0UXVlc3Rpb24gPSBmdW5jdGlvbihhbnN3ZXIpe1xuXG4gICAgICAgIGlmKHF1ZXN0aW9uTnVtPT1xdWVzdGlvbnMubGVuZ3RoKXtcbiAgICAgICAgICAgICRzY29wZS5xdWVzdGlvbiA9ICdZb3VyIGxpc3QgaXMgYmVpbmcgZ2VuZXJhdGVkISc7XG4gICAgICAgICAgICAkc2NvcGUudHlwZSA9ICcnO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICRzY29wZS5xdWVzdGlvbiA9IHF1ZXN0aW9uc1txdWVzdGlvbk51bV0ucXVlc3Rpb247XG4gICAgICAgICAgICAkc2NvcGUudHlwZSA9IHF1ZXN0aW9uc1txdWVzdGlvbk51bV0udHlwZTtcblxuICAgICAgICAgICAgaWYoJHNjb3BlLnR5cGUgPT0gJ2xpc3QnKXtcbiAgICAgICAgICAgICAgICAkc2NvcGUubGlzdCA9IHF1ZXN0aW9uc1txdWVzdGlvbk51bV0uYW5zd2VyT3B0aW9ucztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHF1ZXN0aW9uc1txdWVzdGlvbk51bS0xXS5hbnN3ZXIgPSBhbnN3ZXI7XG5cbiAgICAgICAgICAgIHF1ZXN0aW9uTnVtKys7XG4gICAgICAgIH1cbiAgICB9O1xuXG59XSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9